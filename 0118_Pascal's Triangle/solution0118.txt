class Solution(object):

    def generate(self, numRows):

        if numRows == 1: return [[1]]

        elif numRows == 2: return [[1], [1,1]]

        else:
            
            pascle_triangle = [[1], [1,1]]
            row_index = 2
            
            while row_index < numRows:
                
                current_row = [1, 1]
                insert_index = 1
                
                previous_row_index = 0

                while previous_row_index < len(pascle_triangle[row_index-1])-1:
                    
                    current_row.insert(
                        insert_index, 
                        pascle_triangle[row_index-1][previous_row_index] + pascle_triangle[row_index-1][previous_row_index+1]
                    )
                    
                    insert_index += 1
                    previous_row_index += 1
                    
                pascle_triangle.append(current_row)
                row_index += 1
                
            return pascle_triangle
    
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
        