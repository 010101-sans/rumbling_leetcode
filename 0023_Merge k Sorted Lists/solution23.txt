# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

class Solution(object):

    def mergeKLists(self, lists):

        all_elements = []
        
        for linked_list in lists:
            node = linked_list
            while node is not None:
                all_elements.append(node.val)
                node = node.next 
        
        all_elements = sorted(all_elements)
            

        first_node = None
        last_node = None
        
        for i in range(len(all_elements)):
            
            if first_node==None and last_node==None:
                last_node = first_node = ListNode(all_elements.pop(0), None)

            else:
                last_node.next = ListNode(all_elements.pop(0), None)
                last_node = last_node.next
                
        return first_node
        
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        
